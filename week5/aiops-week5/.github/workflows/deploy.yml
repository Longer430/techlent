name: Deploy to AWS EC2
on:
  push:
    branches: [ "week5" ]
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_IP_ADDRESS }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        command_timeout: 5m
        script: |
          # Error handling
          set -e
          
          echo "Starting deployment..."
          
          # Define paths
          BASE_DIR="/home/${{ secrets.EC2_USERNAME }}/aiops"
          BACKEND_DIR="$BASE_DIR/backend"
          FRONTEND_DIR="$BASE_DIR/frontend"
          
          # Kill existing processes with exact path matching
          echo "Stopping existing processes..."
          pkill -f "$BACKEND_DIR/venv/bin/python $BACKEND_DIR/app.py" || true
          pkill -f "$FRONTEND_DIR/venv/bin/python3 $FRONTEND_DIR/venv/bin/streamlit" || true
          sleep 5
          
          # Navigate to project directory
          cd "$BASE_DIR" || exit 1
          
          # Pull latest code
          echo "Pulling latest code..."
          git fetch --all
          git reset --hard origin/week5
          
          # Deploy backend
          echo "Deploying backend..."
          cd "$BACKEND_DIR" || exit 1
          source venv/bin/activate || exit 1
          nohup "$BACKEND_DIR/venv/bin/python" "$BACKEND_DIR/app.py" > "$BASE_DIR/backend.log" 2>&1 &
          deactivate
          
          # Wait for backend to start
          sleep 10
          if ! pgrep -f "$BACKEND_DIR/venv/bin/python $BACKEND_DIR/app.py" > /dev/null; then
            echo "Backend failed to start. Check logs."
            exit 1
          fi
          
          # Deploy frontend
          echo "Deploying frontend..."
          cd "$FRONTEND_DIR" || exit 1
          source venv/bin/activate || exit 1
          nohup "$FRONTEND_DIR/venv/bin/python3" "$FRONTEND_DIR/venv/bin/streamlit" run frontend.py \
            --server.address 0.0.0.0 \
            --server.port 8501 \
            > "$BASE_DIR/frontend.log" 2>&1 &
          deactivate
          
          # Wait for frontend to start
          sleep 10
          if ! pgrep -f "$FRONTEND_DIR/venv/bin/python3 $FRONTEND_DIR/venv/bin/streamlit" > /dev/null; then
            echo "Frontend failed to start. Check logs."
            # Kill backend if frontend fails
            pkill -f "$BACKEND_DIR/venv/bin/python $BACKEND_DIR/app.py" || true
            exit 1
          fi
          
          # Final verification
          echo "Verifying processes..."
          ps aux | grep -e "python" | grep -v "grep"
          
          echo "Deployment completed successfully!"
